1. Создай локальный репозиторий (дальше будем называть его первым).
tech@tech-work ~ $ mkdir first_repo
tech@tech-work ~ $ cd first_repo/
tech@tech-work ~/first_repo $ git init
Инициализирован пустой репозиторий Git в /home/tech/first_repo/.git/

2. Настрой имя пользователя (Фамилия Имя по-русски) и емейл (корпоративный емейл в домене reg.ru) для коммитера. Убедись, что они установлены верно, выведя соответствующие конфигурационные параметры.
tech@tech-work ~/first_repo $ git config --global user.name "Сединкин Сергей"
tech@tech-work ~/first_repo $ git config --global user.email "s.sedinkin@reg.ru"
tech@tech-work ~/first_repo $ git config --get user.name
Сединкин Сергей
tech@tech-work ~/first_repo $ git config --get user.email
s.sedinkin@reg.ru

3. Опубликуй репозиторий на Github (дальше будем называть его центральным).
tech@tech-work ~/first_repo $ git remote add origin https://github.com/ssedinkin/first_repo.git
tech@tech-work ~/first_repo $ git push -u origin master
Username for 'https://github.com': ssedinkin
Password for 'https://ssedinkin@github.com': 
error: src refspec master does not match any.
error: не удалось отправить некоторые ссылки в «https://github.com/ssedinkin/first_repo.git»

4. Создай в каталоге с репозиторием файл task1.1, скопируй в него текст этого задания. Посмотри статус репозитория. Сделай так, чтобы это файл никогда не попал в репозиторий и не обрабатывался никакими командами git. Просмотри ещё раз статус репозитория.
tech@tech-work ~/first_repo $ vim task1.1
tech@tech-work ~/first_repo $ git status
На ветке master

Начальный коммит

Неотслеживаемые файлы:
  (используйте «git add <файл>…», чтобы добавить в то, что будет включено в коммит)

	task1.1

ничего не добавлено в коммит, но есть неотслеживаемые файлы (используйте «git add», чтобы отслеживать их)
tech@tech-work ~/first_repo $ vim .gitignore
tech@tech-work ~/first_repo $ git status
На ветке master

Начальный коммит

нечего коммитить (создайте/скопируйте файлы, затем запустите «git add», чтобы отслеживать их)

5. Создай в репозитории файл task1.1_answer. Этот файл будет ответом на упражнение и должен содержать все выполняемые команды и их вывод по каждому пункту задания. Впиши в этот файл уже выполненные команды и их результат. Зафиксируй выполненные правки и отправь их в центральный репозиторий.
tech@tech-work ~/first_repo $ vim task1.1_answer
tech@tech-work ~/first_repo $ vim task1.1_answer
tech@tech-work ~/first_repo $ git add task1.1_answer
tech@tech-work ~/first_repo $ git commit -m 'task 5'
[master (корневой коммит) 1d45690] task 5
 1 file changed, 42 insertions(+)
 create mode 100644 task1.1_answer
tech@tech-work ~/first_repo $ git push -u origin master
Username for 'https://github.com': ssedinkin
Password for 'https://ssedinkin@github.com': 
Counting objects: 3, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (2/2), done.
Writing objects: 100% (3/3), 1.27 KiB | 0 bytes/s, done.
Total 3 (delta 0), reused 0 (delta 0)
To https://github.com/ssedinkin/first_repo.git
 * [new branch]      master -> master
Ветка master отслеживает внешнюю ветку master из origin.

6. Склонируй репозиторий в другую директорию/на другую машину (дальше будем называть его вторым).
tech@tech-work ~/first_repo $ cd ..
tech@tech-work ~ $ git clone first_repo second_repo
Клонирование в «second_repo»…
готово.
tech@tech-work ~ $ ls | grep repo
first_repo
second_repo

7. Во втором репозитории создай файлы fileA и fileB с произвольной строкой текста в каждом. Добавь соответствующие команды в task1.1_answer. Просмотри статус репозитория. Сделай так, чтобы правки файлов fileA и fileB (но не task1.1_answer) попали в первый репозиторий. Просмотри статус репозитория.
tech@tech-work ~ $ cd second_repo/
tech@tech-work ~/second_repo $ echo fai2YaCh > fileA
tech@tech-work ~/second_repo $ echo Muo1xuth > fileB
tech@tech-work ~/second_repo $ cat fileA
fai2YaCh
tech@tech-work ~/second_repo $ cat fileB
Muo1xuth
tech@tech-work ~/second_repo $ vim task1.1_answer 
tech@tech-work ~/second_repo $ git status
На ветке master
Ваша ветка обновлена в соответствии с «origin/master».

Изменения, которые не в индексе для коммита:
  (используйте «git add <файл>…», чтобы добавить файл в индекс)
  (используйте «git checkout -- <файл>…», чтобы отменить изменения
   в рабочем каталоге)

	изменено:                   task1.1_answer

Неотслеживаемые файлы:
  (используйте «git add <файл>…», чтобы добавить в то, что будет включено в коммит)

	fileA
	fileB

нет изменений добавленных для коммита
(используйте «git add» и/или «git commit -a»)
tech@tech-work ~/second_repo $ git add fileA
tech@tech-work ~/second_repo $ git add fileB
tech@tech-work ~/second_repo $ git commit -m 'task 7'
[master 91b1129] task 7
 2 files changed, 2 insertions(+)
 create mode 100644 fileA
 create mode 100644 fileB
tech@tech-work ~/second_repo $ git push
warning: push.default is unset; its implicit value is changing in
Git 2.0 from 'matching' to 'simple'. To squelch this message
and maintain the current behavior after the default changes, use:

  git config --global push.default matching

To squelch this message and adopt the new behavior now, use:

  git config --global push.default simple

When push.default is set to 'matching', git will push local branches
to the remote branches that already exist with the same name.

In Git 2.0, Git will default to the more conservative 'simple'
behavior, which only pushes the current branch to the corresponding
remote branch that 'git pull' uses to update the current branch.

See 'git help config' and search for 'push.default' for further information.
(the 'simple' mode was introduced in Git 1.7.11. Use the similar mode
'current' instead of 'simple' if you sometimes use older versions of Git)

Counting objects: 5, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (2/2), done.
Writing objects: 100% (4/4), 348 bytes | 0 bytes/s, done.
Total 4 (delta 0), reused 0 (delta 0)
remote: error: refusing to update checked out branch: refs/heads/master
remote: error: By default, updating the current branch in a non-bare repository
remote: error: is denied, because it will make the index and work tree inconsistent
remote: error: with what you pushed, and will require 'git reset --hard' to match
remote: error: the work tree to HEAD.
remote: error: 
remote: error: You can set 'receive.denyCurrentBranch' configuration variable to
remote: error: 'ignore' or 'warn' in the remote repository to allow pushing into
remote: error: its current branch; however, this is not recommended unless you
remote: error: arranged to update its work tree to match what you pushed in some
remote: error: other way.
remote: error: 
remote: error: To squelch this message and still keep the default behaviour, set
remote: error: 'receive.denyCurrentBranch' configuration variable to 'refuse'.
To /home/tech/first_repo
 ! [remote rejected] master -> master (branch is currently checked out)
error: не удалось отправить некоторые ссылки в «/home/tech/first_repo»
tech@tech-work ~/second_repo $ cd ../first_repo/
tech@tech-work ~/first_repo $ git config --local receive.denyCurrentBranch ignore
tech@tech-work ~/first_repo $ cd ../second_repo/
tech@tech-work ~/second_repo $ git push
warning: push.default is unset; its implicit value is changing in
Git 2.0 from 'matching' to 'simple'. To squelch this message
and maintain the current behavior after the default changes, use:

  git config --global push.default matching

To squelch this message and adopt the new behavior now, use:

  git config --global push.default simple

When push.default is set to 'matching', git will push local branches
to the remote branches that already exist with the same name.

In Git 2.0, Git will default to the more conservative 'simple'
behavior, which only pushes the current branch to the corresponding
remote branch that 'git pull' uses to update the current branch.

See 'git help config' and search for 'push.default' for further information.
(the 'simple' mode was introduced in Git 1.7.11. Use the similar mode
'current' instead of 'simple' if you sometimes use older versions of Git)

Counting objects: 5, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (2/2), done.
Writing objects: 100% (4/4), 348 bytes | 0 bytes/s, done.
Total 4 (delta 0), reused 0 (delta 0)
To /home/tech/first_repo
   1d45690..91b1129  master -> master
tech@tech-work ~/second_repo $ git status
На ветке master
Ваша ветка обновлена в соответствии с «origin/master».

Изменения, которые не в индексе для коммита:
  (используйте «git add <файл>…», чтобы добавить файл в индекс)
  (используйте «git checkout -- <файл>…», чтобы отменить изменения
   в рабочем каталоге)

	изменено:                   task1.1_answer

нет изменений добавленных для коммита
(используйте «git add» и/или «git commit -a»)

8. В первом репозитории добавь в fileA ещё одну строчку текста. Просмотри текущие изменения в этом файле. fileB удали. Добавь соответствующие команды в task1.1_answer. Отправь правки в центральный репозиторий.
tech@tech-work ~/second_repo $ cd ../first_repo/
tech@tech-work ~/first_repo $ git reset --hard
HEAD сейчас на 91b1129 task 7
tech@tech-work ~/first_repo $ vim fileA
tech@tech-work ~/first_repo $ cat fileA 
fai2YaCh
neiKaif1
tech@tech-work ~/first_repo $ git rm fileB
rm 'fileB'
tech@tech-work ~/first_repo $ vim task1.1_answer
tech@tech-work ~/first_repo $ git add fileA
tech@tech-work ~/first_repo $ git add task1.1_answer
tech@tech-work ~/first_repo $ git commit -m 'task 8'
[master 140ba8a] task 8
 3 files changed, 131 insertions(+), 1 deletion(-)
 delete mode 100644 fileB
tech@tech-work ~/first_repo $ git push -u origin master
Username for 'https://github.com': ssedinkin
Password for 'https://ssedinkin@github.com':
Counting objects: 10, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (5/5), done.
Writing objects: 100% (8/8), 3.15 KiB | 0 bytes/s, done.
Total 8 (delta 0), reused 0 (delta 0)
To https://github.com/ssedinkin/first_repo.git
   1d45690..140ba8a  master -> master
Ветка master отслеживает внешнюю ветку master из origin.

9. Во втором репозитории зафиксируй оставшиеся правки файла task1.1_answer. Просмотри лог в первом и втором репозитории. Сделай так, чтобы они попали в первый репозиторий вместе с правками этого файла, выполненными там.
tech@tech-work ~/first_repo $ cd ../second_repo/
tech@tech-work ~/second_repo $ vim task1.1_answer 
tech@tech-work ~/second_repo $ cd ../first_repo/
tech@tech-work ~/first_repo $ git log --all
commit 140ba8a2cac1d372ddb6617f625a343fd8c768d0
Author: Сединкин Сергей <s.sedinkin@reg.ru>
Date:   Thu Feb 9 01:56:39 2017 +0400

    task 8

commit 91b112902203e4871c1f630b0fecdd7b6d51253e
Author: Сединкин Сергей <s.sedinkin@reg.ru>
Date:   Thu Feb 9 01:46:39 2017 +0400

    task 7

commit 1d4569029d7292dba28b66d550d87e808539c2db
Author: Сединкин Сергей <s.sedinkin@reg.ru>
Date:   Thu Feb 9 01:37:37 2017 +0400

    task 5
tech@tech-work ~/first_repo $ cd ../second_repo/
tech@tech-work ~/second_repo $ git log --all
commit 91b112902203e4871c1f630b0fecdd7b6d51253e
Author: Сединкин Сергей <s.sedinkin@reg.ru>
Date:   Thu Feb 9 01:46:39 2017 +0400

    task 7

commit 1d4569029d7292dba28b66d550d87e808539c2db
Author: Сединкин Сергей <s.sedinkin@reg.ru>
Date:   Thu Feb 9 01:37:37 2017 +0400

    task 5
tech@tech-work ~/second_repo $ git add task1.1_answer
tech@tech-work ~/second_repo $ git commit -m 'task 9'
[master 507c002] task 9
 1 file changed, 59 insertions(+)
tech@tech-work ~/second_repo $ git pull
Автослияние task1.1_answer
КОНФЛИКТ (содержимое): Конфликт слияния в task1.1_answer
Удаление fileB
Не удалось провести автоматическое слияние; исправьте конфликты и сделайте коммит результата.
tech@tech-work ~/second_repo $ vim task1.1_answer
tech@tech-work ~/second_repo $ git status
На ветке master
Ваша ветка и «origin/master» разошлись
и теперь имеют 1 и 1 разный коммит в каждой соответственно.
  (используйте «git pull», чтобы слить внешнюю ветку в вашу)

У вас есть не слитые пути.
  (разрешите конфликты, затем запустите «git commit»)

Изменения, которые будут включены в коммит:

	изменено:                   fileA
	deleted:                    fileB

Не слитые пути:
  (используйте «git add <файл>…», чтобы пометить разрешение конфликта)

	оба измены:task1.1_answer

tech@tech-work ~/second_repo $ git add task1.1_answer
tech@tech-work ~/second_repo $ git tag v1
tech@tech-work ~/second_repo $ git commit -m 'task 9'
[master 9593f38] task 9
tech@tech-work ~/second_repo $ git tag v2
tech@tech-work ~/second_repo $ git push
warning: push.default is unset; its implicit value is changing in
Git 2.0 from 'matching' to 'simple'. To squelch this message
and maintain the current behavior after the default changes, use:

  git config --global push.default matching

To squelch this message and adopt the new behavior now, use:

  git config --global push.default simple

When push.default is set to 'matching', git will push local branches
to the remote branches that already exist with the same name.

In Git 2.0, Git will default to the more conservative 'simple'
behavior, which only pushes the current branch to the corresponding
remote branch that 'git pull' uses to update the current branch.

See 'git help config' and search for 'push.default' for further information.
(the 'simple' mode was introduced in Git 1.7.11. Use the similar mode
'current' instead of 'simple' if you sometimes use older versions of Git)

Counting objects: 10, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (6/6), done.
Writing objects: 100% (6/6), 2.25 KiB | 0 bytes/s, done.
Total 6 (delta 3), reused 0 (delta 0)
To /home/tech/first_repo
   140ba8a..9593f38  master -> master
tech@tech-work ~/second_repo $ ls
fileA  task1.1_answer

10. В первом репозитории восстанови файл fileB, отправь его в центральный репозиторий.
tech@tech-work ~/second_repo $ cd ../first_repo/
tech@tech-work ~/first_repo $ git reset --hard
HEAD сейчас на 9593f38 task 9
tech@tech-work ~/first_repo $ git rev-list -n 1 HEAD -- fileB
140ba8a2cac1d372ddb6617f625a343fd8c768d0
tech@tech-work ~/first_repo $ git checkout 140ba8a2cac1d372ddb6617f625a343fd8c768d0^ -- fileB
tech@tech-work ~/first_repo $ git add fileB
tech@tech-work ~/first_repo $ git commit -m 'task 10'
[master 1e76af3] task 10
 1 file changed, 1 insertion(+)
 create mode 100644 fileB
tech@tech-work ~/first_repo $ git push -u origin master
Username for 'https://github.com': ssedinkin
Password for 'https://ssedinkin@github.com': 
Counting objects: 12, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (8/8), done.
Writing objects: 100% (8/8), 2.53 KiB | 0 bytes/s, done.
Total 8 (delta 3), reused 0 (delta 0)
remote: Resolving deltas: 100% (3/3), completed with 2 local objects.
To https://github.com/ssedinkin/first_repo.git
   140ba8a..1e76af3  master -> master
Ветка master отслеживает внешнюю ветку master из origin.

11. Приведи оба репозитория к одинаковому финальному состоянию. Посмотри лог в первом и втором репозитории.
tech@tech-work ~/first_repo $ cd ../second_repo/
tech@tech-work ~/second_repo $ git pull
remote: Counting objects: 4, done.
remote: Compressing objects: 100% (2/2), done.
remote: Total 3 (delta 0), reused 0 (delta 0)
Unpacking objects: 100% (3/3), done.
Из /home/tech/first_repo
   9593f38..1e76af3  master     -> origin/master
Обновление 9593f38..1e76af3
Fast-forward
 fileB | 1 +
 1 file changed, 1 insertion(+)
 create mode 100644 fileB
tech@tech-work ~/second_repo $ git log --all
commit 1e76af3f335f46aaf524b34ce6ced5ce2a5a607f
Author: Сединкин Сергей <s.sedinkin@reg.ru>
Date:   Thu Feb 9 02:25:46 2017 +0400

    task 10

commit 9593f38d735585025580f29c6e66fd25ce7d8272
Merge: 507c002 140ba8a
Author: Сединкин Сергей <s.sedinkin@reg.ru>
Date:   Thu Feb 9 02:13:15 2017 +0400

    task 9

commit 507c0025b538f1e2c800dfc30e18029372d6b81d
Author: Сединкин Сергей <s.sedinkin@reg.ru>
Date:   Thu Feb 9 02:02:38 2017 +0400

    task 9

commit 140ba8a2cac1d372ddb6617f625a343fd8c768d0
Author: Сединкин Сергей <s.sedinkin@reg.ru>
Date:   Thu Feb 9 01:56:39 2017 +0400

    task 8

commit 91b112902203e4871c1f630b0fecdd7b6d51253e
Author: Сединкин Сергей <s.sedinkin@reg.ru>
Date:   Thu Feb 9 01:46:39 2017 +0400

    task 7

commit 1d4569029d7292dba28b66d550d87e808539c2db
Author: Сединкин Сергей <s.sedinkin@reg.ru>
Date:   Thu Feb 9 01:37:37 2017 +0400

    task 5
tech@tech-work ~/first_repo $ cd ../first_repo/
tech@tech-work ~/first_repo $ git log --all
commit 1e76af3f335f46aaf524b34ce6ced5ce2a5a607f
Author: Сединкин Сергей <s.sedinkin@reg.ru>
Date:   Thu Feb 9 02:25:46 2017 +0400

    task 10

commit 9593f38d735585025580f29c6e66fd25ce7d8272
Merge: 507c002 140ba8a
Author: Сединкин Сергей <s.sedinkin@reg.ru>
Date:   Thu Feb 9 02:13:15 2017 +0400

    task 9

commit 507c0025b538f1e2c800dfc30e18029372d6b81d
Author: Сединкин Сергей <s.sedinkin@reg.ru>
Date:   Thu Feb 9 02:02:38 2017 +0400

    task 9

commit 140ba8a2cac1d372ddb6617f625a343fd8c768d0
Author: Сединкин Сергей <s.sedinkin@reg.ru>
Date:   Thu Feb 9 01:56:39 2017 +0400

    task 8

commit 91b112902203e4871c1f630b0fecdd7b6d51253e
Author: Сединкин Сергей <s.sedinkin@reg.ru>
Date:   Thu Feb 9 01:46:39 2017 +0400

    task 7

commit 1d4569029d7292dba28b66d550d87e808539c2db
Author: Сединкин Сергей <s.sedinkin@reg.ru>
Date:   Thu Feb 9 01:37:37 2017 +0400

    task 5

12. Создай в первом репозитории ветку feature1. Добавь произвольную строку в файл fileB, обнови task1.1_answer и отправь в центральный репозиторий.
tech@tech-work ~/first_repo $ git checkout -b feature1
Переключено на новую ветку «feature1»
tech@tech-work ~/first_repo $ vim fileB 
tech@tech-work ~/first_repo $ vim task1.1_answer 
tech@tech-work ~/first_repo $ git add fileB
tech@tech-work ~/first_repo $ git add task1.1_answer 
tech@tech-work ~/first_repo $ git commit -m 'task 12'
[feature1 ad9f9c6] task 12
 2 files changed, 155 insertions(+)
tech@tech-work ~/first_repo $ git push -u origin feature1
Username for 'https://github.com': ssedinkin
Password for 'https://ssedinkin@github.com': 
Counting objects: 7, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (3/3), done.
Writing objects: 100% (4/4), 1.34 KiB | 0 bytes/s, done.
Total 4 (delta 1), reused 0 (delta 0)
remote: Resolving deltas: 100% (1/1), completed with 1 local objects.
To https://github.com/ssedinkin/first_repo.git
 * [new branch]      feature1 -> feature1
Ветка feature1 отслеживает внешнюю ветку feature1 из origin.

13. Во втором репозитории создай ветку feature2 из ветки master. 
tech@tech-work ~/first_repo $ cd ../second_repo/
tech@tech-work ~/second_repo $ git checkout -b feature2
Переключено на новую ветку «feature2»

14. Получи ветку feature1 во втором репозитории, влей изменения из неё в ветку master, обнови task1.1_answer, отправь изменения в центральный репозиторий.
tech@tech-work ~/second_repo $ git pull
remote: Counting objects: 9, done.
remote: Compressing objects: 100% (3/3), done.
remote: Total 4 (delta 1), reused 0 (delta 0)
Unpacking objects: 100% (4/4), done.
Из /home/tech/first_repo
 * [новая ветка]     feature1   -> origin/feature1
There is no tracking information for the current branch.
Please specify which branch you want to merge with.
See git-pull(1) for details

    git pull <remote> <branch>

If you wish to set tracking information for this branch you can do so with:

    git branch --set-upstream-to=origin/<branch> feature2

tech@tech-work ~/second_repo $ git pull origin feature1
Из /home/tech/first_repo
 * branch            feature1   -> FETCH_HEAD
Обновление 1e76af3..ad9f9c6
Fast-forward
 fileB          |   1 +
 task1.1_answer | 154 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 2 files changed, 155 insertions(+)
tech@tech-work ~/second_repo $ git checkout feature1
Ветка feature1 отслеживает внешнюю ветку feature1 из origin.
Переключено на новую ветку «feature1»
tech@tech-work ~/second_repo $ git merge master
Already up-to-date.
vim task1.1_answer
tech@tech-work ~/second_repo $ git remote add github https://github.com/ssedinkin/first_repo.git
tech@tech-work ~/second_repo $ git add task1.1_answer 
tech@tech-work ~/second_repo $ git commit -m 'task 14'
[feature2 36e460b] task 14
 1 file changed, 55 insertions(+)
tech@tech-work ~/second_repo $ git push -u github feature1
Username for 'https://github.com': ssedinkin
Password for 'https://ssedinkin@github.com': 
Ветка feature1 отслеживает внешнюю ветку feature1 из github.
Everything up-to-date

15. Во втором репозитории переключись на ветку feature2. Просмотри список веток локально и в центральном репозитории. Обнови task1.1_answer, отправь в центральный репозиторий.
tech@tech-work ~/second_repo $ git checkout feature2
Переключено на ветку «feature2»
tech@tech-work ~/second_repo $ git fetch
Из .
 * branch            github     -> FETCH_HEAD
tech@tech-work ~/second_repo $ git branch -a
  feature1
* feature2
  github
  master
  remotes/github/feature1
  remotes/origin/HEAD -> origin/master
  remotes/origin/feature1
  remotes/origin/master
